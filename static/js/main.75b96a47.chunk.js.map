{"version":3,"sources":["Utils/Game.js","Components/EasyTest.js","Utils/Game_choice.js","Components/HardTest.js","Components/Showall.js","Components/Practice.js","Components/Homepage.js","Utils/Navibar.js","Components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["randnum1","randnum2","generateRandom","min","max","Math","floor","random","makeRandom","Game","useState","answer","setAnswer","score","setScore","count","setCount","descDP","setDescDP","gameDP","setGameDP","resultDP","setResultDP","className","style","display","onClick","e","width","marginLeft","type","value","onChange","target","onKeyPress","key","Number","alert","EasyTest","Min","Max","answers","sort","Game_choice","props","dan","check","id","HardTest","a","useEffect","setInterval","console","log","clearInterval","Showall","unshow1","unshow2","answerB","setA","b","setB","uns1","setUns1","uns2","setUns2","dp1","setDp1","dp2","setDp2","btnClick","n","j","result","index","menuList","map","menu","menuList2","unshowList1","unshowList2","show","Practice","setDan","btnDP","setBtnDP","danChoice","Homepage","StyledMenu","withStyles","paper","border","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","backgroundColor","palette","primary","main","color","common","white","MenuItem","Navibar","React","anchorEl","setAnchorEl","currentPagename","setCurrentPagename","handleClose","currentTarget","name","basename","position","Button","aria-controls","aria-haspopup","variant","event","keepMounted","open","Boolean","onClose","ListItemIcon","fontSize","to","ListItemText","textAlign","exact","path","component","MainPage","state","registerInput","registerDP","choiceDP","this","setState","Component","App","StrictMode","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"qVAQIA,EAAUC,E,mNALVC,G,MAAiB,SAAUC,EAAKC,GAEhC,OADaC,KAAKC,MAAMD,KAAKE,UAAUH,EAAID,EAAI,IAAMA,IAKzDH,EAAWE,EAAe,EAAE,GAC5BD,EAAWC,EAAe,EAAE,GAE5B,IAAMM,EAAa,WACfR,EAAWE,EAAe,EAAE,GAC5BD,EAAWC,EAAe,EAAE,IA0EjBO,MAtEf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACJC,EADI,KACIC,EADJ,OAEeF,mBAAS,GAFxB,mBAEJG,EAFI,KAEGC,EAFH,OAGeJ,mBAAS,GAHxB,mBAGJK,EAHI,KAGGC,EAHH,OAIiBN,mBAAS,IAJ1B,mBAIJO,EAJI,KAIIC,EAJJ,OAKiBR,mBAAS,QAL1B,mBAKJS,EALI,KAKIC,EALJ,OAMqBV,mBAAS,QAN9B,mBAMJW,EANI,KAMMC,EANN,KAQX,OACI,6BACI,yBAAKC,UAAU,WAAWC,MAAO,CAACC,QAAQR,IACtC,4BAAQS,QAAS,SAAAC,GACbT,EAAU,QACVE,EAAU,IACVE,EAAY,UAHhB,6BAOJ,yBAAKC,UAAU,cAAcC,MAAO,CAACC,QAAQN,IACzC,uBAAGI,UAAU,OAAOC,MAAO,CAACI,MAAM,SAAU5B,GACxC,uBAAGuB,UAAU,OAAOC,MAAO,CAACI,MAAM,SAC9B,0BAAML,UAAU,OAAOC,MAAO,CAACI,MAAM,SAAS,0BAAML,UAAU,OAAOC,MAAO,CAACK,WAAW,MAA1C,KAA9C,IAAuG,0BAAMN,UAAU,QAAQtB,KAEvI,2BACI6B,KAAK,OACLC,MAAOpB,EACPqB,SAAU,SAAAL,GAAC,OAAGf,EAAUe,EAAEM,OAAOF,QACjCG,WAAY,SAAAP,GACK,UAAVA,EAAEQ,MACEC,OAAOzB,KAAaX,EAAWC,GAC9BoC,MAAM,kCACNrB,EAASD,EAAQ,GACjBD,EAASD,EAAQ,GACjBL,IACAI,EAAU,MAEVyB,MAAM,iDAAD,OAAerC,EAASC,IAC7Be,EAASD,EAAQ,GACjBP,IACAI,EAAU,KAEO,IAAlBwB,OAAOrB,KACNK,EAAU,QACVE,EAAY,SAO5B,sDACYP,EADZ,QAMJ,yBAAKQ,UAAU,aAAaC,MAAO,CAACC,QAAQJ,IACpC,6CAAiB,GAARR,EAAT,QACA,4BAAQa,QAAU,SAAAC,GACdb,EAAS,GACTE,EAAS,GACTJ,EAAU,IACVQ,EAAU,IACVE,EAAY,UALhB,+BCjELgB,ICCXtC,EAAUC,EDDCqC,EARf,WACI,OACI,6BACI,kBAAC,EAAD,CAAMC,IAAI,IAAIC,IAAI,Q,MCO9BvC,EAAW,EAIX,IAAIwC,EAAU,GACRjC,EAAa,WACfP,KAOAwC,EAAU,EAJKzC,EAAW,GAAKC,EACjBD,GAAYC,EAAW,GACvBD,EAAWC,EACXD,GAAYC,EAAW,KAE7ByC,MAAK,WACT,OAAOrC,KAAKE,SAAWF,KAAKE,aAmFrBoC,MA/Ef,SAAqBC,GAAQ,IAAD,EACIlC,mBAAS,IADb,mBACTE,GADS,aAEEF,mBAAS,GAFX,mBAEjBG,EAFiB,KAEVC,EAFU,OAGEJ,mBAAS,GAHX,mBAGjBK,EAHiB,KAGVC,EAHU,OAIIN,mBAAS,IAJb,mBAIjBO,EAJiB,KAITC,EAJS,OAKIR,mBAAS,QALb,mBAKjBS,EALiB,KAKTC,EALS,OAMQV,mBAAS,QANjB,mBAMjBW,EANiB,KAMPC,EANO,KAOxBtB,EAAW4C,EAAMC,IAEjB,IAAMC,EAAQ,SAAAnB,GACNS,OAAOT,EAAEM,OAAOc,MAAQ/C,EAAWC,GACnCe,EAASD,EAAQ,GACjBD,EAASD,EAAQ,GACjBL,IACAI,EAAU,MAGVI,EAASD,EAAQ,GACjBP,IACAI,EAAU,KAEA,IAAVG,IACAK,EAAU,QACVE,EAAY,MAIpB,OACI,yBAAKC,UAAU,yBACX,yBAAKA,UAAU,WAAWC,MAAO,CAAEC,QAASR,IACxC,4BAAQS,QAAS,SAAAC,GACbT,EAAU,QACVE,EAAU,IACVE,EAAY,QACZd,MAJJ,6BAQJ,yBAAKe,UAAU,cAAcC,MAAO,CAAEC,QAASN,IAA/C,iBACSJ,EAAM,EADf,IAEI,uBAAGQ,UAAU,OAAOC,MAAO,CAAEI,MAAO,SAAW5B,GAC/C,uBAAGuB,UAAU,OAAOC,MAAO,CAAEI,MAAO,SAChC,0BAAML,UAAU,OAAOC,MAAO,CAAEI,MAAO,SACnC,0BAAML,UAAU,QAAhB,KADJ,IACoC,0BAAMA,UAAU,QAAQtB,KAKhE,yBAAKsB,UAAU,cACX,4BAAQA,UAAU,aAAawB,GAAIN,EAAQ,GAAIf,QAASoB,GAAQL,EAAQ,IACxE,4BAAQlB,UAAU,aAAawB,GAAIN,EAAQ,GAAIf,QAASoB,GAAQL,EAAQ,KAE5E,yBAAKlB,UAAU,cACX,4BAAQA,UAAU,aAAawB,GAAIN,EAAQ,GAAIf,QAASoB,GAAQL,EAAQ,IACxE,4BAAQlB,UAAU,aAAawB,GAAIN,EAAQ,GAAIf,QAASoB,GAAQL,EAAQ,KAK5E,sDACY1B,EADZ,QAMJ,yBAAKQ,UAAU,aAAaC,MAAO,CAAEC,QAASJ,IAC1C,6CAAiB,GAARR,EAAT,QACA,4BAAQa,QAAS,SAAAC,GACbb,EAAS,GACTE,EAAS,GACTJ,EAAU,IACVQ,EAAU,IACVE,EAAY,UALhB,+BCnED0B,MA7Bf,WAEI,IAAIC,EAoBJ,OAVAC,qBAAU,WAKN,OAbAD,EAAIE,aAAY,WACZC,QAAQC,IAAI,YACd,KAWK,WAPPC,cAAcL,OAad,0C,cCoFOM,MA3Gf,WAEI,IAAIC,EAAS,GACTC,EAAS,GACT9C,EAAS,GACT+C,EAAU,GALC,EAMGhD,qBANH,mBAMRuC,EANQ,KAMLU,EANK,OAOGjD,qBAPH,mBAORkD,EAPQ,KAOLC,EAPK,OAQSnD,qBART,mBAQRoD,EARQ,KAQFC,EARE,OASSrD,qBATT,mBASRsD,EATQ,KASFC,EATE,OAUOvD,mBAAS,QAVhB,mBAURwD,EAVQ,KAUHC,EAVG,OAWOzD,mBAAS,QAXhB,mBAWR0D,EAXQ,KAWHC,EAXG,KAiDTC,EAAW,SAAA3C,IAnCjB,SAAc4C,GAIV,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,IAAIC,EAASF,EAAI,MAAQC,EAAI,MAAQD,EAAIC,EACzC7D,EAAM,sBAAOA,GAAP,CAAe8D,IACrBA,EAAUF,EAAI,MAAQC,EAAZD,YACVf,EAAO,sBAAOA,GAAP,CAAgBiB,IAE3B,IAAI,IAAID,EAAE,EAAGA,EAAE,GAAIA,IAAI,CACnB,IAAIC,EAASF,EAAI,MAAQC,EAAI,MAAQD,EAAIC,EACzCd,EAAO,sBAAOA,GAAP,CAAgBe,IACvBA,EAAUF,EAAI,MAAQC,EAAZD,YACVd,EAAO,sBAAOA,GAAP,CAAgBgB,IAE3B,IAAIC,EAAQ,EACNC,EAAWhE,EAAOiE,KAAI,SAACC,GAAD,OACxB,wBAAItD,UAAU,mBAAmBY,IAAKuC,KAAUG,MAE9CC,EAAYpB,EAAQkB,KAAI,SAACC,GAAD,OAC1B,wBAAItD,UAAU,mBAAmBY,IAAKuC,KAAUG,MAE9CE,EAAcvB,EAAQoB,KAAI,SAACC,GAAD,OAC5B,wBAAItD,UAAU,kBAAkBY,IAAKuC,KAAUG,MAE7CG,EAAcvB,EAAQmB,KAAI,SAACC,GAAD,OAC5B,wBAAItD,UAAU,kBAAkBY,IAAKuC,KAAUG,MAEnDlB,EAAKgB,GACLd,EAAKiB,GACLf,EAAQgB,GACRd,EAAQe,GAIRC,CAAKtD,EAAEM,OAAOc,KAWlB,OACI,yBAAKxB,UAAU,qBACX,yBAAKA,UAAU,mBACX,4BAAQA,UAAU,eAAeG,QAZ1B,SAAAC,GACfwC,EAAO,QACPE,EAAO,UAUC,sBACA,4BAAQ9C,UAAU,eAAeG,QAT1B,SAAAC,GACfwC,EAAO,QACPE,EAAO,UAOC,6BAGJ,6BAEI,yBAAK9C,UAAU,WAAWC,MAAO,CAACC,QAAQyC,IACtC,wBAAI3C,UAAU,gBACT0B,GAEL,wBAAI1B,UAAU,gBACTqC,IAGT,yBAAKrC,UAAU,WAAWC,MAAO,CAACC,QAAQ2C,IACtC,wBAAI7C,UAAU,gBACTuC,GAEL,wBAAIvC,UAAU,gBACTyC,IAIT,6BACI,4BAAQzC,UAAU,UAAUwB,GAAG,IAAIrB,QAAS4C,GAA5C,WACA,4BAAQ/C,UAAU,UAAUwB,GAAG,IAAIrB,QAAS4C,GAA5C,WACA,4BAAQ/C,UAAU,UAAUwB,GAAG,IAAIrB,QAAS4C,GAA5C,WACA,4BAAQ/C,UAAU,UAAUwB,GAAG,IAAIrB,QAAS4C,GAA5C,YAEJ,6BACI,4BAAQ/C,UAAU,UAAUwB,GAAG,IAAIrB,QAAS4C,GAA5C,WACA,4BAAQ/C,UAAU,UAAUwB,GAAG,IAAIrB,QAAS4C,GAA5C,WACA,4BAAQ/C,UAAU,UAAUwB,GAAG,IAAIrB,QAAS4C,GAA5C,WACA,4BAAQ/C,UAAU,UAAUwB,GAAG,IAAIrB,QAAS4C,GAA5C,e,MCzCLY,MA7Cf,WAAqB,IAAD,EAEMxE,qBAFN,mBAETmC,EAFS,KAEJsC,EAFI,OAGUzE,mBAAS,IAHnB,mBAGT0E,EAHS,KAGFC,EAHE,OAIY3E,mBAAS,QAJrB,mBAITS,EAJS,KAIDC,EAJC,KAMVkE,EAAY,SAAA3D,GACdwD,EAAOxD,EAAEM,OAAOc,IAChBV,MAAM,GAAD,OAAIV,EAAEM,OAAOc,GAAb,iDACL3B,EAAU,IACViE,EAAS,SAGb,OACI,yBAAK9D,UAAU,sBACX,yBAAKC,MAAO,CAAEC,QAASN,IACnB,kBAAC,EAAD,CAAa0B,IAAKA,KAGtB,yBAAKrB,MAAO,CAAEC,QAAS2D,IACnB,yBAAK7D,UAAU,mBAAf,SAGA,kIACA,6BACI,4BAAQA,UAAU,eAAewB,GAAG,IAAIrB,QAAS4D,GAAjD,WACA,4BAAQ/D,UAAU,eAAewB,GAAG,IAAIrB,QAAS4D,GAAjD,WACA,4BAAQ/D,UAAU,eAAewB,GAAG,IAAIrB,QAAS4D,GAAjD,WACA,4BAAQ/D,UAAU,eAAewB,GAAG,IAAIrB,QAAS4D,GAAjD,YAEJ,6BACI,4BAAQ/D,UAAU,eAAewB,GAAG,IAAIrB,QAAS4D,GAAjD,WACA,4BAAQ/D,UAAU,eAAewB,GAAG,IAAIrB,QAAS4D,GAAjD,WACA,4BAAQ/D,UAAU,eAAewB,GAAG,IAAIrB,QAAS4D,GAAjD,WACA,4BAAQ/D,UAAU,eAAewB,GAAG,IAAIrB,QAAS4D,GAAjD,YAEJ,4BAAQ/D,UAAU,gBAAgBwB,GAAG,OAArC,mB,MC9BDwC,MAjBf,WACI,OACI,yBAAKhE,UAAU,sBACX,yBAAKA,UAAU,mBAAf,sBAGA,yBAAKA,UAAU,mBACX,4BAAQA,UAAU,iBAClB,4BAAQA,UAAU,iBAClB,4BAAQA,UAAU,iBAClB,4BAAQA,UAAU,oBCK5BiE,EAAaC,YAAW,CAC1BC,MAAO,CACHC,OAAQ,sBAFGF,EAIhB,SAAC7C,GAAD,OACC,kBAACgD,EAAA,EAAD,eACIC,UAAW,EACXC,mBAAoB,KACpBC,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,WAEZrD,OAINuD,EAAiBV,aAAW,SAACW,GAAD,MAAY,CAC1CC,KAAM,CACF,UAAW,CACPC,gBAAiBF,EAAMG,QAAQC,QAAQC,KACvC,sDAAuD,CACnDC,MAAON,EAAMG,QAAQI,OAAOC,YALrBnB,CASnBoB,KA0FWC,MAtFf,SAAiBlE,GAAQ,IAAD,EACYmE,IAAMrG,SAAS,MAD3B,mBACbsG,EADa,KACHC,EADG,OAE0BvG,mBAAS,kCAFnC,mBAEbwG,EAFa,KAEIC,EAFJ,KAQdC,EAAc,SAACzF,GACjByB,QAAQC,IAAI1B,EAAE0F,cAAcC,MAC5BH,EAAmBxF,EAAE0F,cAAcC,MACnCL,EAAY,OAIhB,OACI,kBAAC,IAAD,CAAQM,SAAS,eACb,yBAAK/F,MAAO,CAACgG,SAAS,UAClB,kBAACC,EAAA,EAAD,CACIC,gBAAc,kBACdC,gBAAc,OACdC,QAAQ,YACRlB,MAAM,UACNhF,QAnBI,SAACmG,GACjBZ,EAAYY,EAAMR,iBAaV,WAWJ,kBAAC7B,EAAD,CACIzC,GAAG,kBACHiE,SAAUA,EACVc,aAAW,EACXC,KAAMC,QAAQhB,GACdiB,QAASb,GAET,kBAACjB,EAAD,KACI,kBAAC+B,EAAA,EAAD,KACI,kBAAC,IAAD,CAAUC,SAAS,WAEvB,kBAAC,IAAD,CAAMb,KAAK,SAAI/F,UAAU,WAAW6G,GAAG,IAAI1G,QAAS0F,GAAa,kBAACiB,EAAA,EAAD,CAAc7B,QAAQ,WAI3F,kBAACL,EAAD,KACI,kBAAC+B,EAAA,EAAD,KACI,kBAAC,IAAD,CAAUC,SAAS,WAEvB,kBAAC,IAAD,CAAMb,KAAK,sBAAO/F,UAAU,WAAW6G,GAAG,WAAW1G,QAAS0F,GAAa,kBAACiB,EAAA,EAAD,CAAc7B,QAAQ,cAIrG,kBAACL,EAAD,KACI,kBAAC+B,EAAA,EAAD,KACI,kBAAC,IAAD,CAAYC,SAAS,WAEzB,kBAAC,IAAD,CAAMb,KAAK,2BAAO/F,UAAU,WAAW6G,GAAG,YAAY1G,QAAS0F,GAAa,kBAACiB,EAAA,EAAD,CAAc7B,QAAQ,eAGtG,kBAACL,EAAD,KACI,kBAAC+B,EAAA,EAAD,KACI,kBAAC,IAAD,CAAWC,SAAS,WAExB,kBAAC,IAAD,CAAMb,KAAK,2BAAO/F,UAAU,WAAW6G,GAAG,YAAY1G,QAAS0F,GAAa,kBAACiB,EAAA,EAAD,CAAc7B,QAAQ,eAGtG,kBAACL,EAAD,KACI,kBAAC+B,EAAA,EAAD,KACI,kBAAC,IAAD,CAAWC,SAAS,WAExB,kBAAC,IAAD,CAAMb,KAAK,iCAAQ/F,UAAU,WAAW6G,GAAG,YAAY1G,QAAS0F,GAAa,kBAACiB,EAAA,EAAD,CAAc7B,QAAQ,gBAG3G,yBAAKhF,MAAO,CAAC8G,UAAU,SAAU1G,MAAM,SACnC,uBAAGL,UAAU,WAAW2F,GACxB,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,IAAIC,UAAWlD,IACjC,kBAAC,IAAD,CAAOiD,KAAK,WAAWC,UAAWlF,IAClC,kBAAC,IAAD,CAAOiF,KAAK,YAAYC,UAAWvD,IACnC,kBAAC,IAAD,CAAOsD,KAAK,YAAYC,UAAWnG,IACnC,kBAAC,IAAD,CAAOkG,KAAK,YAAYC,UAAWzF,OCnEpC0F,G,wDA/CX,WAAY9F,GAAO,IAAD,8BACd,cAAMA,IACD+F,MAAO,CACRC,cAAgB,GAChBC,WAAa,GACbC,SAAW,QALD,E,qDAQT,IAAD,OAaJ,OACI,6BACI,yBAAKvH,UAAU,WAAWC,MAAO,CAACC,QAAQsH,KAAKJ,MAAME,aACjD,yBAAKtH,UAAU,eAAf,sBACA,2BACIA,UAAU,gBACVO,KAAK,OACLC,MAAOgH,KAAKJ,MAAMC,cAClB5G,SAAU,SAAAL,GAAI,EAAKqH,SAAS,CAACJ,cAAcjH,EAAEM,OAAOF,WAGxD,4BAAQR,UAAU,mBAAmBG,QAtBlC,WACoB,KAA7B,EAAKiH,MAAMC,cACVvG,MAAM,kEAEN,EAAK2G,SAAS,CACVH,WAAa,OACbC,SAAW,WAgBV,6BAKJ,yBAAKvH,UAAU,SAASC,MAAO,CAACC,QAAQsH,KAAKJ,MAAMG,WAC/C,kBAAC,EAAD,CAASxB,KAAMyB,KAAKJ,MAAMC,sB,GAvCvB7B,IAAMkC,YCFdC,MARf,WACE,OACE,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,QCIcnB,QACW,cAA7BoB,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMN,WAAP,KACE,kBAAC,EAAD,OAEFO,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/G,QAAQ+G,MAAMA,EAAMC,c","file":"static/js/main.75b96a47.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport '../CSSs/Game.css';\r\n\r\nlet generateRandom = function (min, max) {\r\n    let ranNum = Math.floor(Math.random()*(max-min+1)) + min;\r\n    return ranNum;\r\n}\r\n\r\nlet randnum1, randnum2;\r\nrandnum1 = generateRandom(2,9);\r\nrandnum2 = generateRandom(2,9);\r\n\r\nconst makeRandom = () => {\r\n    randnum1 = generateRandom(2,9);\r\n    randnum2 = generateRandom(2,9);\r\n}\r\n\r\n\r\nfunction Game(){\r\n    const [answer, setAnswer] = useState('');\r\n    const [score, setScore] = useState(0);\r\n    const [count, setCount] = useState(0);\r\n    const [descDP, setDescDP] = useState('');\r\n    const [gameDP, setGameDP] = useState('none');\r\n    const [resultDP, setResultDP] = useState('none');\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"desc_box\" style={{display:descDP}}>\r\n                <button onClick={e=>{\r\n                    setDescDP('none');\r\n                    setGameDP('');\r\n                    setResultDP('none');\r\n                }}>시작하기</button>\r\n            </div>\r\n\r\n            <div className=\"gugudan_box\" style={{display:gameDP}}>\r\n                <p className=\"text\" style={{width:'100%'}}>{randnum1}</p>\r\n                    <p className=\"text\" style={{width:'100%'}}>\r\n                        <span className=\"text\" style={{width:'100%'}}><span className=\"text\" style={{marginLeft:'0'}}>x</span> <span className=\"text\">{randnum2}</span></span>\r\n                    </p>\r\n                <input \r\n                    type=\"text\" \r\n                    value={answer} \r\n                    onChange={e=> setAnswer(e.target.value)}\r\n                    onKeyPress={e=>{\r\n                        if(e.key === 'Enter'){\r\n                            if(Number(answer) === (randnum1 * randnum2)){\r\n                                alert(\"정답입니다\");\r\n                                setCount(count + 1);\r\n                                setScore(score + 1);\r\n                                makeRandom();\r\n                                setAnswer('');\r\n                            }else{\r\n                                alert(`오답입니다. 정답: ${randnum1*randnum2}`)\r\n                                setCount(count + 1);\r\n                                makeRandom();\r\n                                setAnswer('');\r\n                            }\r\n                            if(Number(count) === 9){\r\n                                setGameDP('none');\r\n                                setResultDP('');\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                >\r\n                </input>\r\n                <div>\r\n                    문제 수 : {count}/10 \r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\"result_box\" style={{display:resultDP}}>\r\n                    <p>점수 : {score * 10}/100</p>\r\n                    <button onClick={ e=>{\r\n                        setScore(0);\r\n                        setCount(0);\r\n                        setAnswer('');\r\n                        setGameDP('');\r\n                        setResultDP('none');\r\n                    }}>다시하기</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport Game from '../Utils/Game';\r\n\r\nfunction EasyTest(){\r\n    return(\r\n        <div>\r\n            <Game Min=\"2\" Max=\"9\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EasyTest;","// 객관식 게임\r\n// 객관식은 N단 x 1~9까지 차례대로 나온다.\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport \"../CSSs/Game_choice.css\";\r\n\r\nlet generateRandom = function (min, max) {\r\n    let ranNum = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return ranNum;\r\n}\r\n\r\nlet randnum1, randnum2;\r\nrandnum2 = 0;\r\n//randnum1 은 props로 받아온다.\r\n\r\n//객관식 답 배열\r\nlet answers = [];\r\nconst makeRandom = () => {\r\n    randnum2++;\r\n\r\n    //객관식 답\r\n    let answerA = (randnum1 - 1) * randnum2;\r\n    let answerB = randnum1 * (randnum2 - 1);\r\n    let answerC = randnum1 * randnum2;\r\n    let answerD = randnum1 * (randnum2 + 1);\r\n    answers = [answerA, answerB, answerC, answerD];\r\n    answers.sort(function () {\r\n        return Math.random() - Math.random();\r\n    });\r\n}\r\n\r\nfunction Game_choice(props) {\r\n    const [answer, setAnswer] = useState('');\r\n    const [score, setScore] = useState(0);\r\n    const [count, setCount] = useState(0);\r\n    const [descDP, setDescDP] = useState('');\r\n    const [gameDP, setGameDP] = useState('none');\r\n    const [resultDP, setResultDP] = useState('none');\r\n    randnum1 = props.dan;\r\n\r\n    const check = e => {\r\n        if (Number(e.target.id) === randnum1 * randnum2) {\r\n            setCount(count + 1);\r\n            setScore(score + 1);\r\n            makeRandom();\r\n            setAnswer('');\r\n        }\r\n        else {\r\n            setCount(count + 1);\r\n            makeRandom();\r\n            setAnswer('');\r\n        }\r\n        if (count === 9) {\r\n            setGameDP('none');\r\n            setResultDP('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Game_choice_Container\">\r\n            <div className=\"desc_box\" style={{ display: descDP }}>\r\n                <button onClick={e => {\r\n                    setDescDP('none');\r\n                    setGameDP('');\r\n                    setResultDP('none');\r\n                    makeRandom();\r\n                }}>시작하기</button>\r\n            </div>\r\n\r\n            <div className=\"gugudan_box\" style={{ display: gameDP }}>\r\n                (문제 {count+1})\r\n                <p className=\"text\" style={{ width: '100%' }}>{randnum1}</p>\r\n                <p className=\"text\" style={{ width: '100%' }}>\r\n                    <span className=\"text\" style={{ width: '100%' }}>\r\n                        <span className=\"text\">x</span> <span className=\"text\">{randnum2}</span>\r\n                    </span>\r\n                </p>\r\n\r\n                {/* 객관식 답 누를 수 있는 버튼 */}\r\n                <div className=\"Choice_Box\">\r\n                    <button className=\"Answer_Btn\" id={answers[0]} onClick={check}>{answers[0]}</button>\r\n                    <button className=\"Answer_Btn\" id={answers[1]} onClick={check}>{answers[1]}</button>\r\n                </div>\r\n                <div className=\"Choice_Box\">\r\n                    <button className=\"Answer_Btn\" id={answers[2]} onClick={check}>{answers[2]}</button>\r\n                    <button className=\"Answer_Btn\" id={answers[3]} onClick={check}>{answers[3]}</button>\r\n                </div>\r\n                \r\n\r\n\r\n                <div>\r\n                    문제 수 : {count}/10\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"result_box\" style={{ display: resultDP }}>\r\n                <p>점수 : {score * 10}/100</p>\r\n                <button onClick={e => {\r\n                    setScore(0);\r\n                    setCount(0);\r\n                    setAnswer('');\r\n                    setGameDP('');\r\n                    setResultDP('none');\r\n                }}>다시하기</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game_choice;","import React, { useEffect } from 'react';\r\nimport GameChoice from '../Utils/Game_choice';\r\n\r\nfunction HardTest(){\r\n\r\n    let a;\r\n    const Timer = () => {\r\n        a = setInterval(()=>{\r\n            console.log(\"TicTok\")\r\n        },1000)\r\n    }\r\n\r\n    const Stop = () => {\r\n        clearInterval(a);\r\n    }\r\n    useEffect(()=>{\r\n        //여기서 Timer를 실행하고\r\n        Timer();\r\n\r\n        //여기서 Timer를 해제하면 될거같은데\r\n        return ()=>{\r\n            Stop();\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            HardTest\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HardTest;","import React, { useState } from 'react';\r\nimport \"../CSSs/Showall.css\";\r\n\r\nfunction Showall() {\r\n    //여기는 render 부분이라고 생각하면 된다.\r\n    let unshow1 =[];\r\n    let unshow2 =[];\r\n    let answer = [];\r\n    let answerB = [];\r\n    const [a, setA] = useState();\r\n    const [b, setB] = useState();\r\n    const [uns1, setUns1] = useState();\r\n    const [uns2, setUns2] = useState();\r\n    const [dp1, setDp1] = useState('flex');\r\n    const [dp2, setDp2] = useState('none');\r\n\r\n\r\n    function show(n) {\r\n        let last;\r\n        if (n < 10) last = 9;\r\n        else last = n;\r\n        for (let j = 1; j <= 5; j++) {\r\n            let result = n + \" x \" + j + \" = \" + n * j ;\r\n            answer = [...answer, result];\r\n            result =  n + \" x \" + j + \" = \" + \"□\";\r\n            unshow1 = [...unshow1, result];\r\n        }\r\n        for(let j=6; j<10; j++){\r\n            let result = n + \" x \" + j + \" = \" + n * j ;\r\n            answerB = [...answerB, result];\r\n            result =  n + \" x \" + j + \" = \" + \"□\" ;\r\n            unshow2 = [...unshow2, result];\r\n        }\r\n        let index = 0;\r\n        const menuList = answer.map((menu) => (\r\n            <li className=\"showall_listitem\" key={index++}>{menu}</li>)\r\n        );\r\n        const menuList2 = answerB.map((menu)=>(\r\n            <li className=\"showall_listitem\" key={index++}>{menu}</li>\r\n        ))\r\n        const unshowList1 = unshow1.map((menu)=>(\r\n            <li className=\"showall_listiem\" key={index++}>{menu}</li>\r\n        ))\r\n        const unshowList2 = unshow2.map((menu)=>(\r\n            <li className=\"showall_listiem\" key={index++}>{menu}</li>\r\n        ))\r\n        setA(menuList);\r\n        setB(menuList2);\r\n        setUns1(unshowList1);\r\n        setUns2(unshowList2);\r\n    }\r\n\r\n    const btnClick = e => {\r\n        show(e.target.id);\r\n    }\r\n    const modeClick1 = e =>{\r\n        setDp1('flex');\r\n        setDp2('none')\r\n    }\r\n    const modeClick2 = e =>{\r\n        setDp1('none');\r\n        setDp2('flex')\r\n    }\r\n\r\n    return (\r\n        <div className=\"Showall_Container\">\r\n            <div className=\"showmodebtn_box\">\r\n                <button className=\"showmode_btn\" onClick={modeClick1}>답보기</button>\r\n                <button className=\"showmode_btn\" onClick={modeClick2}>답가리기</button>\r\n            </div>\r\n            \r\n            <div>\r\n                {/* 구구단 표 보여줄 곳 */}\r\n                <div className=\"show_Box\" style={{display:dp1}}>\r\n                    <ul className=\"Showall_list\">\r\n                        {a}\r\n                    </ul>\r\n                    <ul className=\"Showall_list\">\r\n                        {b}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"show_Box\" style={{display:dp2}}>\r\n                    <ul className=\"Showall_list\">\r\n                        {uns1}\r\n                    </ul>\r\n                    <ul className=\"Showall_list\">\r\n                        {uns2}\r\n                    </ul>\r\n                </div>\r\n                {/* 구구단 표 고르는 버튼들 */}\r\n                <div>\r\n                    <button className=\"dan_btn\" id=\"2\" onClick={btnClick}>2단</button>\r\n                    <button className=\"dan_btn\" id=\"3\" onClick={btnClick}>3단</button>\r\n                    <button className=\"dan_btn\" id=\"4\" onClick={btnClick}>4단</button>\r\n                    <button className=\"dan_btn\" id=\"5\" onClick={btnClick}>5단</button>\r\n                </div>\r\n                <div>\r\n                    <button className=\"dan_btn\" id=\"6\" onClick={btnClick}>6단</button>\r\n                    <button className=\"dan_btn\" id=\"7\" onClick={btnClick}>7단</button>\r\n                    <button className=\"dan_btn\" id=\"8\" onClick={btnClick}>8단</button>\r\n                    <button className=\"dan_btn\" id=\"9\" onClick={btnClick}>9단</button>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Showall;","import React, { useState } from 'react';\r\nimport Game from '../Utils/Game.js';\r\nimport '../CSSs/Practice.css';\r\nimport Dan_game from '../Utils/Dan_game';\r\nimport Practice2 from './Practice2';\r\nimport Game_choice from '../Utils/Game_choice';\r\n\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\n\r\n// 문제연습은 객관식\r\n// 시험보기만 주관식\r\n\r\n\r\nfunction Practice() {\r\n\r\n    const [dan, setDan] = useState();\r\n    const [btnDP, setBtnDP] = useState('');\r\n    const [gameDP, setGameDP] = useState('none');\r\n\r\n    const danChoice = e => {\r\n        setDan(e.target.id);\r\n        alert(`${e.target.id}을 선택했습니다.`)\r\n        setGameDP('');\r\n        setBtnDP('none');\r\n    }\r\n\r\n    return (\r\n        <div className=\"Practice_Container\">\r\n            <div style={{ display: gameDP }}>\r\n                <Game_choice dan={dan} />\r\n            </div>\r\n\r\n            <div style={{ display: btnDP }}>\r\n                <div className=\"Practice_imgbox\">\r\n                    Imgae\r\n                </div>\r\n                <p>연습하고자 하는 구구단을 선택하세요</p>\r\n                <div>\r\n                    <button className=\"Practice_Btn\" id=\"2\" onClick={danChoice}>2단</button>\r\n                    <button className=\"Practice_Btn\" id=\"3\" onClick={danChoice}>3단</button>\r\n                    <button className=\"Practice_Btn\" id=\"4\" onClick={danChoice}>4단</button>\r\n                    <button className=\"Practice_Btn\" id=\"5\" onClick={danChoice}>5단</button>\r\n                </div>\r\n                <div>\r\n                    <button className=\"Practice_Btn\" id=\"6\" onClick={danChoice}>6단</button>\r\n                    <button className=\"Practice_Btn\" id=\"7\" onClick={danChoice}>7단</button>\r\n                    <button className=\"Practice_Btn\" id=\"8\" onClick={danChoice}>8단</button>\r\n                    <button className=\"Practice_Btn\" id=\"9\" onClick={danChoice}>9단</button>\r\n                </div>\r\n                <button className=\"Practice_Btn2\" id=\"all\">모두</button>\r\n\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Practice;","import React from 'react'\r\nimport \"../CSSs/Homepage.css\";\r\n\r\nfunction Homepage(){\r\n    return(\r\n        <div className=\"Homepage_Container\">\r\n            <div className=\"Homepage_ImgBox\">\r\n                이미지\r\n            </div>\r\n            <div className=\"Homepage_BtnBox\">\r\n                <button className=\"Homepage_Btn\"></button>\r\n                <button className=\"Homepage_Btn\"></button>\r\n                <button className=\"Homepage_Btn\"></button>\r\n                <button className=\"Homepage_Btn\"></button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage;","import React, {useState} from 'react';\r\nimport '../CSSs/Navibar.css';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EasyTest from '../Components/EasyTest';\r\nimport HardTest from '../Components/HardTest';\r\nimport Showall from '../Components/Showall';\r\nimport Practice from '../Components/Practice';\r\nimport Homepage from '../Components/Homepage';\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n        border: '1px solid #d3d4d5',\r\n    },\r\n})((props) => (\r\n    <Menu\r\n        elevation={0}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n        }}\r\n        {...props}\r\n    />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n        '&:focus': {\r\n            backgroundColor: theme.palette.primary.main,\r\n            '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n                color: theme.palette.common.white,\r\n            },\r\n        },\r\n    },\r\n}))(MenuItem);\r\n\r\n\r\n\r\nfunction Navibar(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [currentPagename, setCurrentPagename] = useState(\"어서오세요\");\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        console.log(e.currentTarget.name);\r\n        setCurrentPagename(e.currentTarget.name); //페이지 이동시 해당 페이지의 이름을 가져와 맨위에 띄워주기 위함\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    return (\r\n        <Router basename=\"/ggd_webapp\">\r\n            <div style={{position:'fixed'}}>\r\n                <Button\r\n                    aria-controls=\"customized-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleClick}\r\n                >\r\n                    ▤\r\n                </Button>\r\n            </div>\r\n            \r\n            <StyledMenu\r\n                id=\"customized-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <SendIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <Link name=\"홈\" className=\"linkitem\" to=\"/\" onClick={handleClose}><ListItemText primary=\"Home\"></ListItemText></Link>\r\n                   \r\n                </StyledMenuItem>\r\n\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <SendIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <Link name=\"표 보기\" className=\"linkitem\" to=\"/showall\" onClick={handleClose}><ListItemText primary=\"ShowAll\"></ListItemText></Link>\r\n                   \r\n                </StyledMenuItem>\r\n\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <DraftsIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <Link name=\"연습하기\" className=\"linkitem\" to=\"/practice\" onClick={handleClose}><ListItemText primary=\"Practice\"></ListItemText></Link>\r\n                </StyledMenuItem>\r\n\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <InboxIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <Link name=\"시험보기\" className=\"linkitem\" to=\"/easytest\" onClick={handleClose}><ListItemText primary=\"EasyTest\"></ListItemText></Link>\r\n                </StyledMenuItem>\r\n\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <InboxIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <Link name=\"어려운시험\" className=\"linkitem\" to=\"/hardtest\" onClick={handleClose}><ListItemText primary=\"HardTest\"></ListItemText></Link>\r\n                </StyledMenuItem>\r\n            </StyledMenu>\r\n            <div style={{textAlign:\"center\", width:'100%'}}>\r\n                <p className=\"hello_p\">{currentPagename}</p>\r\n                <Route exact path=\"/\" component={Homepage} />\r\n                <Route path='/showall' component={Showall} />\r\n                <Route path='/practice' component={Practice} />\r\n                <Route path='/easytest' component={EasyTest} />\r\n                <Route path='/hardtest' component={HardTest} />\r\n            </div>\r\n\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Navibar;","import React from 'react';\r\nimport Navibar from '../Utils/Navibar';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport EasyTest from './EasyTest';\r\nimport HardTest from './HardTest';\r\nimport Showall from './Showall';\r\nimport Practice from './Practice';\r\nimport \"../CSSs/MainPage.css\";\r\n/* \r\n메인페이지의 구성\r\n    1. 두개의 div태그를 갖는다. (input창과 등록하기 버튼을 가진 화면 + 종류를 선택할 수 있는 화면)\r\n*/\r\n\r\n\r\n\r\nclass MainPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            registerInput : '',\r\n            registerDP : '',\r\n            choiceDP : 'none'\r\n        }\r\n    }\r\n    render(){\r\n\r\n       const CheckID = () => {\r\n           if(this.state.registerInput === ''){\r\n               alert(\"닉네임을 설정해주세요!\");\r\n           }else{\r\n               this.setState({\r\n                   registerDP : 'none',\r\n                   choiceDP : 'grid'\r\n               })\r\n           }\r\n       }\r\n\r\n        return(\r\n            <div>\r\n                <div className=\"register\" style={{display:this.state.registerDP}}>\r\n                    <div className=\"Main_ImgBox\">이미지</div>\r\n                    <input \r\n                        className=\"Main_InputBox\"\r\n                        type=\"text\" \r\n                        value={this.state.registerInput} \r\n                        onChange={e=>{this.setState({registerInput:e.target.value})}}>\r\n\r\n                    </input>\r\n                    <button className=\"Main_registerBtn\" onClick={CheckID}>\r\n                        등록하기\r\n                    </button>\r\n                </div>\r\n                \r\n                <div className=\"choice\" style={{display:this.state.choiceDP}}>\r\n                    <Navibar name={this.state.registerInput}/>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default MainPage;","import React from 'react';\nimport './App.css';\nimport MainPage from './Components/MainPage.js';\n\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <MainPage />\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}