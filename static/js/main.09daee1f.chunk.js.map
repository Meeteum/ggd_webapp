{"version":3,"sources":["Utils/Game.js","Components/EasyTest.js","Components/Checkscore.js","Components/Showall.js","Utils/Game_choice.js","Components/Practice.js","Components/Homepage.js","Utils/Navibar.js","Utils/Navibar2.js","Components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["randnum1","randnum2","generateRandom","min","max","Math","floor","random","RightAnswerList","WrongAnswerList","makeRandom","gr","ty","tm","td","RightAnswer","WrongAnswer","Game","useState","answer","setAnswer","score","setScore","count","setCount","descDP","setDescDP","gameDP","setGameDP","resultDP","setResultDP","className","style","display","onClick","e","width","marginLeft","type","value","onChange","target","onKeyPress","key","Number","push","localStorage","setItem","JSON","stringify","today","Date","year","getFullYear","month","getMonth","date","getDate","console","log","getItem","map","data","listStyle","color","EasyTest","Min","Max","Checkscore","s","scores","parse","y","years","m","months","d","dates","result","i","length","chat","temp","GetScore","arr","list","Showall","unshow1","unshow2","answerB","a","setA","b","setB","uns1","setUns1","uns2","setUns2","dp1","setDp1","dp2","setDp2","btnClick","n","j","index","menuList","menu","menuList2","unshowList1","unshowList2","show","id","answers","sort","Game_choice","props","dan","check","alert","Practice","setDan","btnDP","setBtnDP","danChoice","userName","Homepage","history","withStyles","paper","border","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","theme","root","backgroundColor","palette","primary","main","common","white","MenuItem","Navibar","Navibar2","handleDrawerToggle","setState","toggle","state","toptitle","name","classes","this","basename","AppBar","position","IconButton","menuButton","Drawer","open","to","textAlign","exact","path","component","React","Component","flexGrow","marginRight","MainPage","registerInput","registerDP","choiceDP","App","StrictMode","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.09daee1f.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport '../CSSs/Game.css';\r\n\r\n// ==========================랜덤 수 발생 함수======================================\r\nlet generateRandom = function (min, max) {\r\n    let ranNum = Math.floor(Math.random()*(max-min+1)) + min;\r\n    return ranNum;\r\n}\r\n\r\nlet randnum1, randnum2;\r\nrandnum1 = generateRandom(2,9);\r\nrandnum2 = generateRandom(2,9);\r\n\r\nconst makeRandom = () => {\r\n    randnum1 = generateRandom(2,9);\r\n    randnum2 = generateRandom(2,9);\r\n}\r\n\r\n\r\n\r\n// ==============점수와 날짜를 localstorage에 담아두기 위한 배열들===================\r\nvar gr = [];\r\nvar ty = [];\r\nvar tm = []; \r\nvar td = []; \r\n\r\n\r\n\r\n// ===================정답과 오답을 종료 후 보여 주기 위한 부분=======================\r\nlet RightAnswer = [];\r\nlet WrongAnswer = [];\r\n\r\nlet RightAnswerList, WrongAnswerList;\r\nconst mapingRightAnswer = () =>{\r\n    RightAnswerList = RightAnswer.map(data=>(\r\n        <li style={{listStyle:'none', color:'blue'}} key={data}>{data}</li>\r\n    ))\r\n}\r\nconst mapingWrongAnswer = () =>{\r\n    WrongAnswerList = WrongAnswer.map(data=>(\r\n        <li style={{listStyle:'none', color:'red'}} key={data}>{data}</li>\r\n    ))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Game(){\r\n    const [answer, setAnswer] = useState('');\r\n    const [score, setScore] = useState(0);\r\n    const [count, setCount] = useState(0);\r\n    const [descDP, setDescDP] = useState('');\r\n    const [gameDP, setGameDP] = useState('none');\r\n    const [resultDP, setResultDP] = useState('none');\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"desc_box\" style={{display:descDP}}>\r\n                <button onClick={e=>{\r\n                    setDescDP('none');\r\n                    setGameDP('');\r\n                    setResultDP('none');\r\n                }}>시작하기</button>\r\n            </div>\r\n\r\n            <div className=\"gugudan_box\" style={{display:gameDP}}>\r\n                <p className=\"text\" style={{width:'100%'}}>{randnum1}</p>\r\n                    <p className=\"text\" style={{width:'100%'}}>\r\n                        <span className=\"text\" style={{width:'100%'}}><span className=\"text\" style={{marginLeft:'0'}}>x</span> <span className=\"text\">{randnum2}</span></span>\r\n                    </p>\r\n                <input \r\n                    type=\"text\" \r\n                    value={answer} \r\n                    onChange={e=> setAnswer(e.target.value)}\r\n                    onKeyPress={e=>{\r\n                        if(e.key === 'Enter'){\r\n                            if(Number(answer) === (randnum1 * randnum2)){   //정답일때\r\n                                setCount(count + 1);\r\n                                setScore(score + 1);\r\n                                makeRandom();\r\n                                setAnswer('');\r\n                                RightAnswer.push(`${randnum1} x ${randnum2} = ${randnum1*randnum2}`);\r\n                            }else{                                          //오답일때\r\n                                setCount(count + 1);\r\n                                makeRandom();\r\n                                setAnswer('');\r\n                                WrongAnswer.push(`${randnum1} x ${randnum2} = ${e.target.value}`)\r\n                            }\r\n                            if(Number(count) === 9){        // 모든 시험이 끝났을때\r\n                                setGameDP('none');\r\n                                setResultDP('');\r\n                                gr.push(score);\r\n                                localStorage.setItem(\"Totalscore\", JSON.stringify(gr));\r\n                                let today = new Date();\r\n                                let year = today.getFullYear(); ty.push(year); localStorage.setItem(\"YearOfScore\", JSON.stringify(ty));\r\n                                let month = today.getMonth(); tm.push(month+1); localStorage.setItem(\"MonthOfScore\", JSON.stringify(tm)); //월은 +1 해줘야함\r\n                                let date = today.getDate(); td.push(date); localStorage.setItem(\"DateOfScore\", JSON.stringify(td));\r\n\r\n                                console.log(localStorage.getItem(\"Totalscore\"));\r\n                                console.log(localStorage.getItem(\"YearOfScore\"));\r\n                                console.log(localStorage.getItem(\"MonthOfScore\"));\r\n                                console.log(localStorage.getItem(\"DateOfScore\"));\r\n\r\n                                mapingRightAnswer();\r\n                                mapingWrongAnswer();\r\n                                RightAnswer = [];\r\n                                WrongAnswer = [];\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                >\r\n                </input>\r\n                <div>\r\n                    문제 수 : {count}/10 \r\n                </div>\r\n                \r\n            </div>\r\n\r\n            {/* 시험 끝나면 display 될 곳 */}\r\n            <div className=\"result_box\" style={{display:resultDP}}>\r\n                    <p>점수 : {score * 10}/100</p>\r\n\r\n                    <div>\r\n                        {RightAnswerList}\r\n                    </div>\r\n                    <div>\r\n                        {WrongAnswerList}\r\n                    </div>\r\n                    \r\n                    <button onClick={ e=>{\r\n                        setScore(0);\r\n                        setCount(0);\r\n                        setAnswer('');\r\n                        setGameDP('');\r\n                        setResultDP('none');\r\n                    }}>다시하기</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport Game from '../Utils/Game';\r\n\r\nfunction EasyTest(){\r\n    return(\r\n        <div>\r\n            <Game Min=\"2\" Max=\"9\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EasyTest;","import React, { useEffect, useState } from 'react';\r\nimport \"../CSSs/Checkscore.css\";\r\n    \r\n    const GetScore = () => {\r\n        let s = localStorage.getItem(\"Totalscore\"); let scores = JSON.parse(s);\r\n        let y = localStorage.getItem(\"YearOfScore\"); let years = JSON.parse(y);\r\n        let m = localStorage.getItem(\"MonthOfScore\"); let months = JSON.parse(m);\r\n        let d = localStorage.getItem(\"DateOfScore\"); let dates = JSON.parse(d);\r\n    \r\n    \r\n        console.log(scores);\r\n        console.log(years);\r\n        console.log(months);\r\n        console.log(dates);\r\n    \r\n        let result = [];\r\n        for(let i=0; i<scores.length; i++){\r\n            let chat;\r\n            if(scores[i] >= 9) chat = \"훌륭해요!\";\r\n            else if(scores[i] >=6) chat = \"좋아요!\";\r\n            else chat = \"분발해요!\";\r\n            let temp = years[i] + \".\" + months[i] + \".\" + dates[i] + \"　　　　\" + scores[i]*10 + \"점　　　　\" + chat;\r\n            result = [...result, temp]\r\n        }\r\n        console.log(result);\r\n        return result;\r\n    }\r\nfunction Checkscore(){\r\n\r\n    const [arr, setArr] = useState(GetScore());\r\n\r\n    const list = arr.map(data => (\r\n        <li style={{listStyle:'none'}} key={data}>{data}</li>\r\n    ))\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"Checkscore_graphBox\">\r\n                성적 그래프...\r\n            </div>\r\n            <div className=\"Score_table\">\r\n                {list}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkscore;","import React, { useState } from 'react';\r\nimport \"../CSSs/Showall.css\";\r\n\r\nfunction Showall() {\r\n    //여기는 render 부분이라고 생각하면 된다.\r\n    let unshow1 =[];\r\n    let unshow2 =[];\r\n    let answer = [];\r\n    let answerB = [];\r\n    const [a, setA] = useState();\r\n    const [b, setB] = useState();\r\n    const [uns1, setUns1] = useState();\r\n    const [uns2, setUns2] = useState();\r\n    const [dp1, setDp1] = useState('flex');  \r\n    const [dp2, setDp2] = useState('none');\r\n\r\n\r\n    function show(n) {\r\n        let last;\r\n        if (n < 10) last = 9;\r\n        else last = n;\r\n        for (let j = 1; j <= 5; j++) {\r\n            let result = n + \" x \" + j + \" = \" + n * j ;\r\n            answer = [...answer, result];\r\n            result =  n + \" x \" + j;\r\n            unshow1 = [...unshow1, result];\r\n        }\r\n        for(let j=6; j<10; j++){\r\n            let result = n + \" x \" + j + \" = \" + n * j ;\r\n            answerB = [...answerB, result];\r\n            result =  n + \" x \" + j;\r\n            unshow2 = [...unshow2, result];\r\n        }\r\n        let index = 0;\r\n        const menuList = answer.map((menu) => (\r\n            <li className=\"showall_listitem\" key={index++}>{menu}</li>) // key 중복 바꿔야함 !!=========================================\r\n        );\r\n        const menuList2 = answerB.map((menu)=>(\r\n            <li className=\"showall_listitem\" key={index++}>{menu}</li>\r\n        ))\r\n        const unshowList1 = unshow1.map((menu)=>(\r\n            <li className=\"showall_listiem\" key={index++}>{menu}</li>\r\n        ))\r\n        const unshowList2 = unshow2.map((menu)=>(\r\n            <li className=\"showall_listiem\" key={index++}>{menu}</li>\r\n        ))\r\n        setA(menuList);\r\n        setB(menuList2);\r\n        setUns1(unshowList1);\r\n        setUns2(unshowList2);\r\n    }\r\n\r\n    const btnClick = e => {\r\n        show(e.target.id);\r\n    }\r\n    const modeClick1 = e =>{\r\n        setDp1('flex');\r\n        setDp2('none')\r\n    }\r\n    const modeClick2 = e =>{\r\n        setDp1('none');\r\n        setDp2('flex')\r\n    }\r\n\r\n    return (\r\n        <div className=\"Showall_Container\">\r\n            <div className=\"showmodebtn_box\">\r\n                <button className=\"showmode_btn\" onClick={modeClick1}>답보기</button>\r\n                <button className=\"showmode_btn\" onClick={modeClick2}>답가리기</button>\r\n            </div>\r\n            \r\n            <div>\r\n                {/* 구구단 표 보여줄 곳 */}\r\n                <div className=\"show_Box\" style={{display:dp1}}>\r\n                    <ul className=\"Showall_list\">\r\n                        {a}\r\n                    </ul>\r\n                    <ul className=\"Showall_list\">\r\n                        {b}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"show_Box\" style={{display:dp2}}>\r\n                    <ul className=\"Showall_list\">\r\n                        {uns1}\r\n                    </ul>\r\n                    <ul className=\"Showall_list\">\r\n                        {uns2}\r\n                    </ul>\r\n                </div>\r\n                {/* 구구단 표 고르는 버튼들 */}\r\n                <div>\r\n                    <button className=\"dan_btn\" id=\"2\" onClick={btnClick}>2단</button>\r\n                    <button className=\"dan_btn\" id=\"3\" onClick={btnClick}>3단</button>\r\n                    <button className=\"dan_btn\" id=\"4\" onClick={btnClick}>4단</button>\r\n                    <button className=\"dan_btn\" id=\"5\" onClick={btnClick}>5단</button>\r\n                </div>\r\n                <div>\r\n                    <button className=\"dan_btn\" id=\"6\" onClick={btnClick}>6단</button>\r\n                    <button className=\"dan_btn\" id=\"7\" onClick={btnClick}>7단</button>\r\n                    <button className=\"dan_btn\" id=\"8\" onClick={btnClick}>8단</button>\r\n                    <button className=\"dan_btn\" id=\"9\" onClick={btnClick}>9단</button>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Showall;","// 객관식 게임\r\n// 객관식은 N단 x 1~9까지 차례대로 나온다.\r\nimport React, { useState } from 'react';\r\nimport \"../CSSs/Game_choice.css\";\r\n\r\n/* =========================== 랜덤수 필요시 활성화 할 것======================================\r\nlet generateRandom = function (min, max) {\r\n    let ranNum = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return ranNum;\r\n}\r\n*/\r\nlet randnum1, randnum2;\r\nrandnum2 = 1;\r\n//randnum1 은 props로 받아온다.\r\n\r\n//======================객관식 답 배열에서 랜덤으로 섞어서 만들기===============================\r\nlet answers = [];\r\nconst makeRandom = () => {\r\n\r\n    let answerA = (randnum1 - 1) * randnum2;\r\n    let answerB = randnum1 * (randnum2 - 1);\r\n    let answerC = randnum1 * randnum2;\r\n    let answerD = randnum1 * (randnum2 + 1);\r\n    answers = [answerA, answerB, answerC, answerD];\r\n    answers.sort(function () {\r\n        return Math.random() - Math.random();\r\n    });\r\n}\r\n\r\n// ==================== 게임끝날을때 결과 알려줄 팝업창 실행 함수 ===============================\r\nconst EndOfGame = () =>{\r\n    alert(\"게임끝났엉\");\r\n    randnum2 = 1;\r\n}\r\n\r\n\r\n\r\nfunction Game_choice(props) {\r\n    const [answer, setAnswer] = useState('');\r\n    const [score, setScore] = useState(0);\r\n    const [count, setCount] = useState(0);\r\n    const [descDP, setDescDP] = useState('');\r\n    const [gameDP, setGameDP] = useState('');\r\n    const [resultDP, setResultDP] = useState('none');\r\n    randnum1 = props.dan;\r\n\r\n    const check = e => {\r\n        if (Number(e.target.id) === (randnum1 * randnum2)) {\r\n            setCount(count + 1);\r\n            setScore(score + 1);  \r\n            makeRandom();\r\n            setAnswer('');\r\n            randnum2++;\r\n        }\r\n        else {\r\n            setCount(count + 1);\r\n            makeRandom();\r\n            setAnswer('');\r\n            randnum2++;\r\n        }\r\n        if (count === 9) {      // 게임 끝날때 동작해야 할 코드들\r\n            setGameDP('none');\r\n            setResultDP('');\r\n            EndOfGame();\r\n        }\r\n    }\r\n\r\n    const onStart = () => {\r\n        setDescDP('none');\r\n        setGameDP('');\r\n        setResultDP('none');\r\n        makeRandom();\r\n    }\r\n    makeRandom();\r\n    return (\r\n        <div className=\"Game_choice_Container\">\r\n\r\n            <div className=\"gugudan_box\" style={{ display: gameDP }}>\r\n                <div>(문제 {count+1})</div>\r\n                <p className=\"text\" style={{ width: '100%' }}>{randnum1}</p>\r\n                <p className=\"text\" style={{ width: '100%' }}>\r\n                    <span className=\"text\" style={{ width: '100%' }}>\r\n                        <span className=\"text\">x</span> <span className=\"text\">{randnum2}</span>\r\n                    </span>\r\n                </p>\r\n\r\n                {/* 객관식 답 누를 수 있는 버튼 */}\r\n                <div className=\"Choice_Line\">\r\n                    <button className=\"Answer_Btn\" id={answers[0]} onClick={check}>{answers[0]}</button>\r\n                    <button className=\"Answer_Btn\" id={answers[1]} onClick={check}>{answers[1]}</button>\r\n                </div>\r\n                <div className=\"Choice_Line\">\r\n                    <button className=\"Answer_Btn\" id={answers[2]} onClick={check}>{answers[2]}</button>\r\n                    <button className=\"Answer_Btn\" id={answers[3]} onClick={check}>{answers[3]}</button>\r\n                </div>\r\n                \r\n  \r\n\r\n                <div>\r\n                    문제 수 : {count+1}/10\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"result_box\" style={{ display: resultDP }}>\r\n                <p>점수 : {score * 10}/100</p>\r\n                <button onClick={e => {\r\n                    setScore(0);\r\n                    setCount(0);\r\n                    setAnswer('');\r\n                    setGameDP('');\r\n                    setResultDP('none');\r\n                    randnum2 = 1;\r\n                }}>다시하기</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game_choice;","import React, { useState } from 'react';\r\nimport '../CSSs/Practice.css';\r\nimport Game_choice from '../Utils/Game_choice';\r\n\r\n\r\n\r\n// 문제연습은 객관식\r\n// 시험보기만 주관식\r\n\r\n  \r\nfunction Practice() {\r\n\r\n    const [dan, setDan] = useState();\r\n    const [btnDP, setBtnDP] = useState('');\r\n    const [gameDP, setGameDP] = useState('none');\r\n\r\n    const danChoice = e => {\r\n        setDan(e.target.id);\r\n        alert(`${e.target.id}을 선택했습니다.`)\r\n        setGameDP('');\r\n        setBtnDP('none');\r\n    }\r\n\r\n    return (\r\n        <div className=\"Practice_Container\">\r\n            <div style={{ display: gameDP }}>\r\n                <Game_choice dan={dan} />\r\n            </div>\r\n\r\n            <div style={{ display: btnDP }}>\r\n                <div className=\"Practice_imgbox\">\r\n                    Imgae\r\n                </div>\r\n                <p>연습하고자 하는 구구단을 선택하세요</p>\r\n                <div className=\"Practice_Btn_Line\">\r\n                    <button className=\"Practice_Btn\" id=\"2\" onClick={danChoice}>2단</button>\r\n                    <button className=\"Practice_Btn\" id=\"3\" onClick={danChoice}>3단</button>\r\n                    <button className=\"Practice_Btn\" id=\"4\" onClick={danChoice}>4단</button>\r\n                    <button className=\"Practice_Btn\" id=\"5\" onClick={danChoice}>5단</button>\r\n                </div>\r\n                <div className=\"Practice_Btn_Line\">\r\n                    <button className=\"Practice_Btn\" id=\"6\" onClick={danChoice}>6단</button>\r\n                    <button className=\"Practice_Btn\" id=\"7\" onClick={danChoice}>7단</button>\r\n                    <button className=\"Practice_Btn\" id=\"8\" onClick={danChoice}>8단</button>\r\n                    <button className=\"Practice_Btn\" id=\"9\" onClick={danChoice}>9단</button>\r\n                </div>\r\n                <button className=\"Practice_Btn2\" id=\"all\">모두</button>\r\n\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Practice;","import React from 'react'\r\nimport \"../CSSs/Homepage.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nlet userName = localStorage.getItem(\"Nickname\");\r\n\r\nfunction Homepage({history}){\r\n    return(\r\n        <div className=\"Homepage_Container\">\r\n            <div className=\"Homepage_ImgBox\">\r\n                이미지\r\n            </div>\r\n            <div className=\"Homepage_BtnBox\">\r\n                <button className=\"Homepage_Btn\" id=\"1\" type=\"button\" onClick={()=> history.push(\"/showall\")}>구구단 표</button>\r\n                <button className=\"Homepage_Btn\" id=\"2\" type=\"button\" onClick={()=> history.push(\"/practice\")}>연습 하기</button>\r\n                <button className=\"Homepage_Btn\" id=\"3\" type=\"button\" onClick={()=> history.push(\"/easytest\")}>시험 보기</button>\r\n                <button className=\"Homepage_Btn\" id=\"4\" type=\"button\" onClick={()=> history.push(\"/checkscore\")}>{userName}의 성적 확인하기</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage;  ","import React, {useState} from 'react';\r\nimport '../CSSs/Navibar.css';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EasyTest from '../Components/EasyTest';\r\nimport Checkscore from '../Components/Checkscore';\r\nimport Showall from '../Components/Showall';\r\nimport Practice from '../Components/Practice';\r\nimport Homepage from '../Components/Homepage';\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n        border: '1px solid #d3d4d5',\r\n    },\r\n})((props) => (\r\n    <Menu\r\n        elevation={0}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n        }}\r\n        {...props}\r\n    />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n        '&:focus': {\r\n            backgroundColor: theme.palette.primary.main,\r\n            '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n                color: theme.palette.common.white,\r\n            },\r\n        },\r\n    },\r\n}))(MenuItem);\r\n\r\n\r\n\r\nfunction Navibar(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [currentPagename, setCurrentPagename] = useState(\"어서오세요\");\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        console.log(e.currentTarget.name);\r\n        setCurrentPagename(e.currentTarget.name); //페이지 이동시 해당 페이지의 이름을 가져와 맨위에 띄워주기 위함\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    return (\r\n        <Router basename=\"/ggd_webapp\">\r\n            <div style={{position:'fixed'}}>\r\n                <Button\r\n                    aria-controls=\"customized-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleClick}\r\n                >\r\n                    ▤\r\n                </Button>\r\n            </div>\r\n            \r\n            <StyledMenu\r\n                id=\"customized-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <SendIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <Link name=\"홈\" className=\"linkitem\" to=\"/\" onClick={handleClose}><ListItemText primary=\"Home\"></ListItemText></Link>\r\n                   \r\n                </StyledMenuItem>\r\n\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <SendIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <Link name=\"표 보기\" className=\"linkitem\" to=\"/showall\" onClick={handleClose}><ListItemText primary=\"ShowAll\"></ListItemText></Link>\r\n                   \r\n                </StyledMenuItem>\r\n\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <DraftsIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <Link name=\"연습 하기\" className=\"linkitem\" to=\"/practice\" onClick={handleClose}><ListItemText primary=\"Practice\"></ListItemText></Link>\r\n                </StyledMenuItem>\r\n\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <InboxIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <Link name=\"시험 보기\" className=\"linkitem\" to=\"/easytest\" onClick={handleClose}><ListItemText primary=\"EasyTest\"></ListItemText></Link>\r\n                </StyledMenuItem>\r\n\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <InboxIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <Link name=\"성적 확인\" className=\"linkitem\" to=\"/checkscore\" onClick={handleClose}><ListItemText primary={props.name + '의 점수확인'}></ListItemText></Link>\r\n                </StyledMenuItem>\r\n            </StyledMenu>\r\n            <div style={{textAlign:\"center\", width:'100%'}}>\r\n                <Route exact path=\"/\" component={Homepage} />\r\n                <Route path=\"/showall\" component={Showall} />\r\n                <Route path=\"/practice\" component={Practice} />\r\n                <Route path=\"/easytest\" component={EasyTest} />\r\n                <Route path=\"/checkscore\" component={Checkscore} />\r\n            </div>\r\n\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Navibar;","import React, {useState} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport EasyTest from '../Components/EasyTest';\r\nimport Checkscore from '../Components/Checkscore';\r\nimport Showall from '../Components/Showall';\r\nimport Practice from '../Components/Practice';\r\nimport Homepage from '../Components/Homepage';\r\nimport '../CSSs/Navibar2.css';\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: 'auto'\r\n    },\r\n};\r\n\r\nclass Navibar2 extends React.Component {\r\n    \r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toggle: false,\r\n            toptitle : '',\r\n        };\r\n    }\r\n    handleDrawerToggle = (e) => {\r\n        this.setState({ \r\n        toggle: !this.state.toggle,\r\n        toptitle : e.target.name\r\n     })\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { toptitle } = this.state;\r\n        return (\r\n            <Router basename=\"/ggd_webapp\">\r\n                <div className={classes.root}>\r\n                    <AppBar className=\"Top_bar\" position=\"static\" style={{display:'block'}}>\r\n                        <IconButton className={classes.menuButton} id=\"hamburgerMenu\" color=\"inherit\" onClick={this.handleDrawerToggle}>\r\n                            <MenuIcon />  \r\n                        </IconButton>\r\n                        <p className=\"Top_bar_text\">{toptitle}</p>\r\n                    </AppBar>\r\n                    <Drawer open={this.state.toggle}>\r\n                        <div className=\"Navibar_imgbox\">이미지</div>\r\n                        <MenuItem onClick={this.handleDrawerToggle}><Link name=\"홈\" className=\"linkitem\" to=\"/\" >홈페이지</Link></MenuItem>\r\n                        <MenuItem id=\"구구단 표\" onClick={this.handleDrawerToggle}><Link name=\"구구단표 보기\" className=\"linkitem\" to=\"/showall\">구구단 표</Link></MenuItem>\r\n                        <MenuItem id=\"연습 하기\" onClick={this.handleDrawerToggle}><Link name=\"연습 하기\" className=\"linkitem\" to=\"/practice\">연습 하기</Link></MenuItem>\r\n                        <MenuItem id=\"시험 보기\" onClick={this.handleDrawerToggle}><Link name=\"시험 보기\" className=\"linkitem\" to=\"/easytest\">시험 보기</Link></MenuItem>\r\n                        <MenuItem id=\"성적 확인\" onClick={this.handleDrawerToggle}><Link name=\"성적 확인\" className=\"linkitem\" to=\"/checkscore\">성적 확인</Link></MenuItem>\r\n\r\n                    </Drawer>\r\n                </div>\r\n                <div style={{textAlign:\"center\", width:'100%'}}>\r\n                <Route exact path=\"/\" component={Homepage} />\r\n                <Route path=\"/showall\" component={Showall} />\r\n                <Route path=\"/practice\" component={Practice} />\r\n                <Route path=\"/easytest\" component={EasyTest} />\r\n                <Route path=\"/checkscore\" component={Checkscore} />\r\n            </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Navibar2);\r\n","import React from 'react';\r\nimport Navibar from '../Utils/Navibar';\r\nimport \"../CSSs/MainPage.css\";\r\nimport Navibar2 from '../Utils/Navibar2';\r\n/* \r\n메인페이지의 구성\r\n    1. 두개의 div태그를 갖는다. (input창과 등록하기 버튼을 가진 화면 + 종류를 선택할 수 있는 화면)\r\n*/\r\n\r\nfunction alreadyPlayer(){\r\n    let username = localStorage.getItem(\"Nickname\");\r\n    if(username != null){\r\n        console.log(\"있다이미\");\r\n    }\r\n}\r\nalreadyPlayer();\r\nclass MainPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            registerInput : '',\r\n            registerDP : '',\r\n            choiceDP : 'none'\r\n        }  \r\n    }\r\n   \r\n    render(){\r\n\r\n       const CheckID = () => {\r\n           if(this.state.registerInput === ''){\r\n               alert(\"닉네임을 설정해주세요!\");\r\n           }else{\r\n               this.setState({\r\n                   registerDP : 'none',\r\n                   choiceDP : 'grid'\r\n               })\r\n               localStorage.setItem(\"Nickname\", this.state.registerInput);\r\n           }\r\n       }\r\n\r\n\r\n\r\n        return(\r\n            <div>\r\n                <div className=\"register\" style={{display:this.state.registerDP}}>\r\n                    <div className=\"Main_ImgBox\">이미지</div>\r\n                    <input \r\n                        className=\"Main_InputBox\"\r\n                        type=\"text\" \r\n                        value={this.state.registerInput} \r\n                        onChange={e=>{this.setState({registerInput:e.target.value})}}>\r\n\r\n                    </input>\r\n                    <button className=\"Main_registerBtn\" onClick={CheckID}>\r\n                        등록하기\r\n                    </button>\r\n                </div>\r\n                \r\n                <div className=\"choice\" style={{display:this.state.choiceDP}}>\r\n                   {/* <Navibar name={this.state.registerInput}/> */} \r\n                   <Navibar2 name={this.state.registerInput} />\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default MainPage;","import React from 'react';\nimport './App.css';\nimport MainPage from './Components/MainPage.js';\n\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <MainPage />\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}