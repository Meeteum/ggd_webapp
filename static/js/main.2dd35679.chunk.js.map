{"version":3,"sources":["Components/EasyTest.js","Utils/Game_choice.js","Components/HardTest.js","Components/Showall.js","Utils/Game.js","Components/Practice.js","Components/Homepage.js","Utils/Navibar.js","Components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["EasyTest","randnum1","randnum2","generateRandom","min","max","Math","floor","random","answers","makeRandom","sort","Game_choice","useState","setAnswer","score","setScore","count","setCount","descDP","setDescDP","gameDP","setGameDP","resultDP","setResultDP","check","e","Number","target","id","className","style","display","onClick","width","HardTest","Showall","answer","a","setA","btnClick","n","last","j","result","index","menuList","map","menu","key","show","Game","marginLeft","type","value","onChange","onKeyPress","alert","Practice","marginBottom","Homepage","StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","backgroundColor","palette","primary","main","color","common","white","MenuItem","Navibar","React","anchorEl","setAnchorEl","handleClose","basename","Button","aria-controls","aria-haspopup","variant","event","currentTarget","keepMounted","open","Boolean","onClose","ListItemIcon","fontSize","to","ListItemText","textAlign","name","exact","path","component","MainPage","state","registerInput","registerDP","choiceDP","this","setState","Component","App","StrictMode","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2dd35679.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction EasyTest(){\r\n    return(\r\n        <div>\r\n            EasyTest\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EasyTest;","import React, { useState } from 'react';\r\nimport '../CSSs/Game.css';\r\n\r\nlet generateRandom = function (min, max) {\r\n    let ranNum = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return ranNum;\r\n}\r\n\r\nlet randnum1, randnum2;\r\nrandnum1 = generateRandom(2, 9);\r\nrandnum2 = generateRandom(2, 9);\r\n\r\n//객관식 답 배열\r\nlet answers = [];\r\nconst makeRandom = () => {\r\n    randnum1 = generateRandom(2, 9);\r\n    randnum2 = generateRandom(2, 9);\r\n\r\n    //객관식 답\r\n    let answerA = (randnum1 - 1) * randnum2;\r\n    let answerB = randnum1 * (randnum2 - 1);\r\n    let answerC = randnum1 * randnum2;\r\n    let answerD = randnum1 * (randnum2 + 1);\r\n    answers = [answerA, answerB, answerC, answerD];\r\n    answers.sort(function () {\r\n        return Math.random() - Math.random();\r\n    });\r\n}\r\n\r\nfunction Game_choice() {\r\n    const [answer, setAnswer] = useState('');\r\n    const [score, setScore] = useState(0);\r\n    const [count, setCount] = useState(0);\r\n    const [descDP, setDescDP] = useState('');\r\n    const [gameDP, setGameDP] = useState('none');\r\n    const [resultDP, setResultDP] = useState('none');\r\n\r\n\r\n    const check = e => {\r\n        if (Number(e.target.id) === randnum1 * randnum2) {\r\n            setCount(count + 1);\r\n            setScore(score + 1);\r\n            makeRandom();\r\n            setAnswer('');\r\n        }\r\n        else {\r\n            setCount(count + 1);\r\n            makeRandom();\r\n            setAnswer('');\r\n        }\r\n        if (count === 9) {\r\n            setGameDP('none');\r\n            setResultDP('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"desc_box\" style={{ display: descDP }}>\r\n                <button onClick={e => {\r\n                    setDescDP('none');\r\n                    setGameDP('');\r\n                    setResultDP('none');\r\n                    makeRandom();\r\n                }}>시작하기</button>\r\n            </div>\r\n\r\n            <div className=\"gugudan_box\" style={{ display: gameDP }}>\r\n                <p className=\"text\" style={{ width: '100%' }}>{randnum1}</p>\r\n                <p className=\"text\" style={{ width: '100%' }}>\r\n                    <span className=\"text\" style={{ width: '100%' }}>\r\n                        <span className=\"text\">x</span> <span className=\"text\">{randnum2}</span>\r\n                    </span>\r\n                </p>\r\n\r\n                {/* 객관식 답 누를 수 있는 버튼 */}\r\n                <button id={answers[0]} onClick={check}>{answers[0]}</button>\r\n                <button id={answers[1]} onClick={check}>{answers[1]}</button>\r\n                <button id={answers[2]} onClick={check}>{answers[2]}</button>\r\n                <button id={answers[3]} onClick={check}>{answers[3]}</button>\r\n\r\n\r\n                <div>\r\n                    문제 수 : {count}/10\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"result_box\" style={{ display: resultDP }}>\r\n                <p>점수 : {score * 10}/100</p>\r\n                <button onClick={e => {\r\n                    setScore(0);\r\n                    setCount(0);\r\n                    setAnswer('');\r\n                    setGameDP('');\r\n                    setResultDP('none');\r\n                }}>다시하기</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game_choice;","import React from 'react';\r\nimport GameChoice from '../Utils/Game_choice';\r\n\r\nfunction HardTest(){\r\n    return(\r\n        <div>\r\n            HardTest\r\n            <GameChoice />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HardTest;","import React, { useState } from 'react';\r\nimport \"../CSSs/Showall.css\";\r\n\r\nfunction Showall() {\r\n    //여기는 render 부분이라고 생각하면 된다.\r\n    let answer = [];\r\n    const [a, setA] = useState();\r\n\r\n    function show(n) {\r\n        let last;\r\n        if (n < 10) last = 9;\r\n        else last = n;\r\n        for (let j = 1; j <= last; j++) {\r\n            let result = n + \"x\" + j + \"=\" + n * j + \"\";\r\n            answer = [...answer, result];\r\n        }\r\n        let index = 0;\r\n        const menuList = answer.map((menu) => (\r\n            <li key={index++}>{menu}</li>)\r\n        );\r\n        setA(menuList);\r\n    }\r\n\r\n    const btnClick = e => {\r\n        show(e.target.id);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Showall_Container\">\r\n            <p>모든 구구단표 보기</p>\r\n            <div>\r\n                <div>\r\n                    <button className=\"dan_btn\" id=\"2\" onClick={btnClick}>2단</button>\r\n                    <button className=\"dan_btn\" id=\"3\" onClick={btnClick}>3단</button>\r\n                    <button className=\"dan_btn\" id=\"4\" onClick={btnClick}>4단</button>\r\n                    <button className=\"dan_btn\" id=\"5\" onClick={btnClick}>5단</button>\r\n                </div>\r\n                <div>\r\n                    <button className=\"dan_btn\" id=\"6\" onClick={btnClick}>6단</button>\r\n                    <button className=\"dan_btn\" id=\"7\" onClick={btnClick}>7단</button>\r\n                    <button className=\"dan_btn\" id=\"8\" onClick={btnClick}>8단</button>\r\n                    <button className=\"dan_btn\" id=\"9\" onClick={btnClick}>9단</button>\r\n                </div>\r\n                <div>\r\n                    <button className=\"dan_btn\" id=\"10\" onClick={btnClick}>10단</button>\r\n                    <button className=\"dan_btn\" id=\"11\" onClick={btnClick}>11단</button>\r\n                    <button className=\"dan_btn\" id=\"12\" onClick={btnClick}>12단</button>\r\n                    <button className=\"dan_btn\" id=\"13\" onClick={btnClick}>13단</button>\r\n                </div>\r\n                <div>\r\n                    <button className=\"dan_btn\" id=\"14\" onClick={btnClick}>14단</button>\r\n                    <button className=\"dan_btn\" id=\"15\" onClick={btnClick}>15단</button>\r\n                    <button className=\"dan_btn\" id=\"16\" onClick={btnClick}>16단</button>\r\n                    <button className=\"dan_btn\" id=\"17\" onClick={btnClick}>17단</button>\r\n                </div>\r\n                <div>\r\n                    <button className=\"dan_btn\" id=\"18\" onClick={btnClick}>18단</button>\r\n                    <button className=\"dan_btn\" id=\"19\" onClick={btnClick}>19단</button>\r\n                </div>\r\n\r\n            </div>\r\n            <div>\r\n                <ul>\r\n                    {a}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Showall;","import React, {useState} from 'react';\r\nimport '../CSSs/Game.css';\r\n\r\nlet generateRandom = function (min, max) {\r\n    let ranNum = Math.floor(Math.random()*(max-min+1)) + min;\r\n    return ranNum;\r\n}\r\n\r\nlet randnum1, randnum2;\r\nrandnum1 = generateRandom(2,9);\r\nrandnum2 = generateRandom(2,9);\r\n\r\nconst makeRandom = () => {\r\n    randnum1 = generateRandom(2,9);\r\n    randnum2 = generateRandom(2,9);\r\n}\r\n\r\n\r\nfunction Game(){\r\n    const [answer, setAnswer] = useState('');\r\n    const [score, setScore] = useState(0);\r\n    const [count, setCount] = useState(0);\r\n    const [descDP, setDescDP] = useState('');\r\n    const [gameDP, setGameDP] = useState('none');\r\n    const [resultDP, setResultDP] = useState('none');\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"desc_box\" style={{display:descDP}}>\r\n                <button onClick={e=>{\r\n                    setDescDP('none');\r\n                    setGameDP('');\r\n                    setResultDP('none');\r\n                }}>시작하기</button>\r\n            </div>\r\n\r\n            <div className=\"gugudan_box\" style={{display:gameDP}}>\r\n                <p className=\"text\" style={{width:'100%'}}>{randnum1}</p>\r\n                    <p className=\"text\" style={{width:'100%'}}>\r\n                        <p className=\"text\" style={{width:'100%'}}><span className=\"text\" style={{marginLeft:'0'}}>x</span> <span className=\"text\">{randnum2}</span></p> \r\n                    </p>\r\n                <input \r\n                    type=\"text\" \r\n                    value={answer} \r\n                    onChange={e=> setAnswer(e.target.value)}\r\n                    onKeyPress={e=>{\r\n                        if(e.key === 'Enter'){\r\n                            if(Number(answer) === (randnum1 * randnum2)){\r\n                                alert(\"정답입니다\");\r\n                                setCount(count + 1);\r\n                                setScore(score + 1);\r\n                                makeRandom();\r\n                                setAnswer('');\r\n                            }else{\r\n                                alert(`오답입니다. 정답: ${randnum1*randnum2}`)\r\n                                setCount(count + 1);\r\n                                makeRandom();\r\n                                setAnswer('');\r\n                            }\r\n                            if(Number(count) === 9){\r\n                                setGameDP('none');\r\n                                setResultDP('');\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                >\r\n                </input>\r\n                <div>\r\n                    문제 수 : {count}/10 \r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\"result_box\" style={{display:resultDP}}>\r\n                    <p>점수 : {score * 10}/100</p>\r\n                    <button onClick={ e=>{\r\n                        setScore(0);\r\n                        setCount(0);\r\n                        setAnswer('');\r\n                        setGameDP('');\r\n                        setResultDP('none');\r\n                    }}>다시하기</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport Game from '../Utils/Game.js';\r\nimport '../CSSs/Practice.css';\r\n\r\nfunction Practice(){\r\n    return(\r\n        <div className=\"Practice_Container\">\r\n            <p style={{marginBottom:70}}>연습하기</p>\r\n            <Game />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Practice;","import React from 'react'\r\n\r\nfunction Homepage(){\r\n    return(\r\n        <div>\r\n            홈페이지입니다.\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport '../CSSs/Navibar.css';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EasyTest from '../Components/EasyTest';\r\nimport HardTest from '../Components/HardTest';\r\nimport Showall from '../Components/Showall';\r\nimport Practice from '../Components/Practice';\r\nimport Homepage from '../Components/Homepage';\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n        border: '1px solid #d3d4d5',\r\n    },\r\n})((props) => (\r\n    <Menu\r\n        elevation={0}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n        }}\r\n        {...props}\r\n    />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n        '&:focus': {\r\n            backgroundColor: theme.palette.primary.main,\r\n            '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n                color: theme.palette.common.white,\r\n            },\r\n        },\r\n    },\r\n}))(MenuItem);\r\n\r\n\r\n\r\nfunction Navibar(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    return (\r\n        <Router basename=\"/ggd_webapp\">\r\n            <Button\r\n                aria-controls=\"customized-menu\"\r\n                aria-haspopup=\"true\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClick}\r\n            >\r\n                ▤\r\n            </Button>\r\n            <StyledMenu\r\n                id=\"customized-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <SendIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <Link className=\"linkitem\" to=\"/\" onClick={handleClose}><ListItemText primary=\"Home\"></ListItemText></Link>\r\n                   \r\n                </StyledMenuItem>\r\n\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <SendIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <Link className=\"linkitem\" to=\"/showall\" onClick={handleClose}><ListItemText primary=\"ShowAll\"></ListItemText></Link>\r\n                   \r\n                </StyledMenuItem>\r\n\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <DraftsIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <Link className=\"linkitem\" to=\"/practice\" onClick={handleClose}><ListItemText primary=\"Practice\"></ListItemText></Link>\r\n                </StyledMenuItem>\r\n\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <InboxIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <Link className=\"linkitem\" to=\"/easytest\" onClick={handleClose}><ListItemText primary=\"EasyTest\"></ListItemText></Link>\r\n                </StyledMenuItem>\r\n\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <InboxIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <Link className=\"linkitem\" to=\"/hardtest\" onClick={handleClose}><ListItemText primary=\"HardTest\"></ListItemText></Link>\r\n                </StyledMenuItem>\r\n            </StyledMenu>\r\n            <div style={{textAlign:\"center\", width:'80%'}}>\r\n                <p className=\"hello_p\">{props.name}님 환영합니다.</p>\r\n                <Route exact path=\"/\" component={Homepage} />\r\n                <Route path='/showall' component={Showall} />\r\n                <Route path='/practice' component={Practice} />\r\n                <Route path='/easytest' component={EasyTest} />\r\n                <Route path='/hardtest' component={HardTest} />\r\n            </div>\r\n\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Navibar;","import React from 'react';\r\nimport Navibar from '../Utils/Navibar';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport EasyTest from './EasyTest';\r\nimport HardTest from './HardTest';\r\nimport Showall from './Showall';\r\nimport Practice from './Practice';\r\n\r\n/* \r\n메인페이지의 구성\r\n    1. 두개의 div태그를 갖는다. (input창과 등록하기 버튼을 가진 화면 + 종류를 선택할 수 있는 화면)\r\n*/\r\n\r\n\r\n\r\nclass MainPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            registerInput : '',\r\n            registerDP : '',\r\n            choiceDP : 'none'\r\n        }\r\n    }\r\n    render(){\r\n\r\n       const CheckID = () => {\r\n           if(this.state.registerInput === ''){\r\n               alert(\"닉네임을 설정해주세요!\");\r\n           }else{\r\n               this.setState({\r\n                   registerDP : 'none',\r\n                   choiceDP : 'flex'\r\n               })\r\n           }\r\n       }\r\n\r\n        return(\r\n            <div>\r\n                \r\n                <div className=\"register\" style={{display:this.state.registerDP}}>\r\n                    <input \r\n                        type=\"text\" \r\n                        value={this.state.registerInput} \r\n                        onChange={e=>{this.setState({registerInput:e.target.value})}}>\r\n                    </input>\r\n                    <button onClick={CheckID}>\r\n                        등록하기\r\n                    </button>\r\n                </div>\r\n                \r\n                <div className=\"choice\" style={{display:this.state.choiceDP}}>\r\n                    <Navibar name={this.state.registerInput}/>\r\n                   {/* <p>{this.state.registerInput}님 어서오세요!</p>\r\n                    <div style={{marginTop: '5vh'}}>\r\n                        <Router>\r\n                            <Link style={{display:'block'}} to=\"/showall\">모든 구구단 보기</Link>\r\n                            <Link style={{display:'block'}} to=\"/practice\">연습하기</Link>\r\n                            <Link style={{display:'block'}} to=\"/easytest\">쉬운 시험보기</Link>\r\n                            <Link style={{display:'block'}} to=\"/hardtest\">어려운 시험보기</Link>\r\n\r\n                            <div>\r\n                                <Route path='/showall' component={Showall} />\r\n                                <Route path='/practice' component={Practice} />\r\n                                <Route path='/easytest' component={EasyTest} />\r\n                                <Route path='/hardtest' component={HardTest} />\r\n                            </div>\r\n                        </Router>\r\n                    </div>\r\n                     */}\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default MainPage;","import React from 'react';\nimport './App.css';\nimport MainPage from './Components/MainPage.js';\n\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <MainPage />\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}